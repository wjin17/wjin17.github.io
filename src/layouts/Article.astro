---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";

type Props = CollectionEntry<"article">["data"];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
---

<html lang="en" class="">
  <head>
    <BaseHead title={title} description={description} />
  </head>

  <body class="bg-background text-foreground flex h-screen flex-col">
    <Header />
    <main class="mx-auto max-w-2xl flex-1 px-4 py-12">
      <article>
        {
          heroImage && (
            <div class="mb-8">
              <img src={heroImage} alt="" class="h-auto w-full rounded-lg" />
            </div>
          )
        }
        <div class="prose">
          <div class="mb-8">
            <time datetime={pubDate.toISOString()} class="text-sm opacity-60">
              {
                pubDate.toLocaleDateString("en-US", {
                  year: "numeric",
                  month: "long",
                  day: "numeric",
                })
              }
            </time>
            {
              updatedDate && (
                <div class="mt-1 text-sm italic opacity-60">
                  Last updated on{" "}
                  {updatedDate.toLocaleDateString("en-US", {
                    year: "numeric",
                    month: "long",
                    day: "numeric",
                  })}
                </div>
              )
            }
            <h1 class="mt-2 text-6xl font-medium md:text-8xl">{title}</h1>
            <hr class="border-foreground/20 my-6 border-t" />
          </div>
          <div class="opacity-90">
            <slot />
          </div>
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const copyButtons = document.querySelectorAll("#copy-button");

    copyButtons.forEach((button) => {
      button.addEventListener("click", async () => {
        const codeBlock = button?.closest("div");

        const pre = codeBlock?.querySelector("pre");
        if (!pre || !pre.textContent) return;
        await navigator.clipboard.writeText(pre.textContent);
        // // const copyIcon = button.querySelector(".copy-icon");
        const copyIcon = codeBlock?.querySelector("#copy-icon");
        const copiedIcon = codeBlock?.querySelector("#copied-icon");
        console.log(copyIcon, copiedIcon);
        copyIcon?.classList.add("hidden");
        copiedIcon?.classList.remove("hidden");

        setTimeout(() => {
          copyIcon?.classList.remove("hidden");
          copiedIcon?.classList.add("hidden");
        }, 1000);
      });
    });
  });
</script>

<style>
  h2 {
    font-size: 5rem;
    color: red;
  }

  .hidden {
    display: none;
  }
</style>
